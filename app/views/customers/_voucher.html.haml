- remove_voucher = ['Destroy',  {:controller => 'vouchers',:action => 'remove_voucher',:id => voucher.id },  {:confirm => (voucher.bundle? ?  MESSAGES[:remove_bundle_0] :  MESSAGES[:remove_voucher_0])}]
- cancel_res = ['Release',  {:controller => 'vouchers', :action => :cancel_reservation, :id => voucher.id, :customer => voucher.customer}, {:confirm => MESSAGES[:release_reservation_0]} ]
- cancel_prepaid = ['Cancel', { :controller => 'vouchers', :action => 'cancel_prepaid', :id => voucher.id, :customer => voucher.customer }, {:confirm => MESSAGES[:cancel_prepaid_0] } ]
- is_boxoffice = nil unless defined?(is_boxoffice)
- is_subscriber = nil unless defined?(is_subscriber)

%tr
  - if is_boxoffice
    %td.adminField
      = h voucher.id
      %br
      = voucher.processed_by_name unless voucher.processed_by_id == voucher.customer.id
  %td= h voucher.vouchertype.name
  - if voucher.bundle?
    / voucher bundle - not reservable
    %td
    - if is_boxoffice_manager
      %td.adminField= button_to(*remove_voucher) if voucher.price.zero?
  - elsif voucher.unreserved?
    / regular voucher, unreserved
    %td= button_to('Make reservation',{ :controller => 'vouchers', :action => 'reserve', :id => voucher.id, :customer => voucher.customer },:method=>:get )
    - if is_boxoffice_manager 
      %td.adminField= button_to(*remove_voucher) if voucher.price.zero?
  - else
    / regular voucher, reserved
    %td
      %span.showName= h voucher.showdate.show.name
      %br
      %span.showDate= h voucher.showdate.thedate.to_formatted_s(:showtime)
      / customer actions on reserved voucher:
      - if (is_boxoffice || voucher.can_be_changed?)
        %br
        = button_to(*cancel_res)
    - if is_boxoffice_manager
      %td.adminField.c.admin=  button_to(*cancel_res)
  / admin can update voucher comments
  - if is_boxoffice
    %td.admin
      - form_remote_tag(:url => {:controller => 'vouchers', :action => 'update_comment', :vid => voucher.id }, :success => "alert('Comment saved')", :failure => "alert('Comment NOT saved - error ' + request.status)") do
        = text_field_tag 'comments', voucher.comments
        = submit_tag 'Save'
