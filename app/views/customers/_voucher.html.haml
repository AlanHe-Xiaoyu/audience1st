- cancel_res = ['Release',  {:controller => 'vouchers', :action => :cancel_reservation, :id => voucher.id, :customer => voucher.customer}, {:confirm => MESSAGES[:release_reservation_0]} ]
- cancel_prepaid = ['Cancel', { :controller => 'vouchers', :action => 'cancel_prepaid', :id => voucher.id, :customer => voucher.customer }, {:confirm => MESSAGES[:cancel_prepaid_0] } ]
- is_boxoffice = nil unless defined?(is_boxoffice)
- is_subscriber = nil unless defined?(is_subscriber)

%tr
  - if is_boxoffice
    %td.adminField
      = h voucher.id
      %br
      = voucher.processed_by_name unless voucher.processed_by_id == voucher.customer.id
    %td.adminField= link_to_if voucher.order_id, voucher.order_id, order_path(voucher.order_id)
  %td= h voucher.vouchertype.name
  / Reservation column: name of show + Cancel Res button, or Make Res button if open
  %td
    - if voucher.reservable? 
      = button_to('Make reservation',{ :controller => 'vouchers', :action => 'reserve', :id => voucher.id, :customer => voucher.customer },:method=>:get )
    - elsif voucher.reserved?
      %span.showName= h voucher.reserved_show
      %br
      %span.showDate= h voucher.reserved_date
  / Cancel Reservation (if applicable)
  %td
    - if voucher.reserved?
      - if (is_boxoffice || voucher.can_be_changed?)
        = button_to(*cancel_res)
      - elsif is_boxoffice_manager
        %span.adminField.c.admin=  button_to(*cancel_res)
  / admin can update voucher comments
  - if is_boxoffice
    %td.admin
      - form_remote_tag(:url => {:controller => 'vouchers', :action => 'update_comment', :vid => voucher.id }, :success => "alert('Comment saved')", :failure => "alert('Comment NOT saved - error ' + request.status)") do
        = text_field_tag 'comments', voucher.comments
        = submit_tag 'Save'
