- form_tag :action => 'do_walkup_sale',:id => @showdate do
  - vtypes = @valid_vouchers.map { |v| v.id }
  = javascript_recalc_function 'total', vtypes, 'price','qty','donation'
  = javascript_recalc_function 'totaltix', vtypes, '', 'qty', '', '', 0

  %table#walkup_tickets
    %thead
      %tr
        %th{:valign=>:top}
          %p 1. Select tickets & donation amount
        %th{:valign=>:top}
          %p 2. Collect payment or process credit card, record sale
    %tbody
      %tr
        %td{:valign=>:top}
          %table.hilite
            %tr
              %td{:colspan=>2}
                %strong Tickets to be issued
              %td= text_field_tag 'totaltix', 0, :id => 'totaltix',  |
                :size => 4, :disabled => true, :class => 'disabledField'  |
            %tr
              %td{:colspan=>2}
                %strong TOTAL TO COLLECT
              %td= text_field_tag 'total', '0.00', :id => 'total', :size => 6, |
                :disabled => true, :class => 'disabledField strong' |
            %tr
              %td.label{:colspan => 2} Additional donation:
              %td= text_field_tag 'donation', '', :maxlength => 7, :size => 5, |
                :onChange => 'recalc_total(); recalc_totaltix()'  |
            - @valid_vouchers.each do |v|
              %tr
                %td.label
                  = h(v.vouchertype_name)
                  - unless v.max_sales_for_type.zero?
                    %span.emphasis= "(#{v.seats_remaining} left)" 
                %td= text_field_tag "price[#{v.id}]", |
                  number_to_currency(v.price, :unit => ''), :disabled => true, |
                  :size => 6, :class => 'disabledField currency' |
                %td= select_tag("qty[#{v.id}]", options_for_select((0..12), @qty[v.id.to_s].to_i), {:onChange => "recalc_total(); recalc_totaltix()"})  
        %td.c.t
          %br
          = submit_tag 'Record Cash Payment'
          = submit_tag 'Record Check Payment'
          %br
          %br
          = javascript_tag submit_if_zero('checkZero', 'total', |
            'This option may only be used when no payment needs to be collected.') |
          = button_to_function 'Record Zero-Revenue Order', 'checkZero()'
          %br
          %br
          #credit_card= render :partial => 'store/credit_card_swipe', :locals => {:credit_card => @credit_card}
          = submit_tag 'Record Credit Card Payment', :disable_with => 'Processing, Please Wait...', :id => 'submit_credit_card'

= javascript_tag 'recalc_total(); recalc_totaltix();'
            
