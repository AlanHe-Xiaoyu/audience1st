= error_messages_for 'vouchertype', :header_message => default_validation_error_message
/[form:vouchertype]

%p
  %label{:for => :vouchertype_type} Type
  = select 'vouchertype', 'category', options_for_select( |
      [["Bundle", :bundle], |
      ["Comp (single ticket)", :comp], |
      ["Single subscriber voucher", :subscriber], |
      ["Regular revenue voucher", :revenue], |
      ["Nonticket product", :nonticket]], |
      {:selected => @vouchertype.category.to_sym}) |
  = popup_help_for :vouchertype_type

%p
  %label{:for=>:vouchertype_name} Name
  = text_field 'vouchertype', 'name'

%p
  %label{:for=>:vouchertype_price} Price
  = text_field 'vouchertype', 'price', :size => 6

%p
  %label{:for=>:vouchertype_account_code} Account Code
  = text_field 'vouchertype', 'account_code', :size => 8
  = popup_help_for :vouchertype_account_code

%p
  %label{:for=>:vouchertype_offer_public} Availability
  = select "vouchertype", "offer_public", Vouchertype.offer_to
  = popup_help_for :vouchertype_availability

%p
  %label{:for=>:vouchertype_valid_date} Not valid before midnight on
  = datetime_select 'vouchertype', 'valid_date', :discard_hour => true, :discard_minute => true

%p
  %label{:for=>:vouchertype_expiration_date} Not valid after midnight on
  = datetime_select 'vouchertype', 'expiration_date', :discard_hour => true, :discard_minute => true

%p.clear
  %label{:for=>:vouchertype_fulfillment_needed} Mail fulfillment needed
  = check_box 'vouchertype', 'fulfillment_needed'
  = popup_help_for :vouchertype_fulfillment_needed

%p
  %label{:for=>:vouchertype_walkup_sale_allowed} Walkup sales allowed
  = check_box 'vouchertype', 'walkup_sale_allowed'
  = popup_help_for :vouchertype_walkup_sale_allowed

/This part of form is for bundle vouchers

%p
  %label{:for=>:vouchertype_subscription} Qualifies buyer as a Subscriber
  = check_box 'vouchertype', 'subscription'

%p
  %label{:for=>:vouchertype_comments} Comments/description
  = text_area 'vouchertype', 'comments', 'cols' => 40, 'rows' => 3

- if @vouchertype.bundle?
  %p
    %label{:for=>:vouchertype_bundle_sales_start} Sales start
    = datetime_select 'vouchertype', 'bundle_sales_start'

  %p
    %label{:for=>:vouchertype_bundle_sales_start} Sales end
    = datetime_select 'vouchertype', 'bundle_sales_end'

  %p
    %label{:for=>:voucher_included_vouchers}Included vouchers:
    %br/

  %table.hilite
    - Vouchertype.zero_cost_vouchertypes.each do |v|
      - unless v.bundle?
        %tr
          %td.r= h(v.name)
          %td.l
            %input{:type=>:text, :id=>"vouchertype_included_vouchers[#{v.id}]", :name=>"vouchertype[included_vouchers][#{v.id}]", :size=>4, :value=>"#{@vouchertype.included_vouchers[v.id.to_s]}" }

- else

  %p.strong Note: You  must first define a voucher to be a  bundle, then go back and edit to add the appropriate tickets to the bundle.

/[eoform:vouchertype]


